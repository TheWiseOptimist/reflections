When would you want to use a remote repository rather than keeping all your work
local?

    When more that one person is working on the files in the project, and when
    you are working on the project from more that one computer.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    The concept here is similar to the concept behind commits.  While it is 
    important to stay up-to-date, it is better to remain in control of 
    deciding what updates are to be retained.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks
    Online clone of GitHub repository (cloud-cloud)

    Clones
    Replicated copy of a repository (local-local) or (cloud-local)

    Branches
    Alternative directions of a project, or alternate sections
    that are being worked on simultaneously

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It would seem to be a good thing to know what others are working on and
    the status of their progress.  It might affect your own thinking or planning,
    for better or worse, but would likely save some duplication of effort
    and would be likely to reduce conflicts, or make them easier to resolve.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I would preferably use a screen-sharing collaborative tool, upload files to
    the cloud for revision and review, or pass files back and forth via email.
    Screen sharing would be faster if both/all parties are available at the 
    same time.  The others would work similarly to Git, but would entail more
    manual review.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
